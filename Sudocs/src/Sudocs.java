class Sudocs {
	int p, cubeSize, cubeBase, cubeVolume, solutionsCount;
	int[][][] cube;

	public Sudocs(int innerSquareSize){
		p = innerSquareSize;
		cubeSize = p * p;
		cubeBase = cubeSize * cubeSize;
		cubeVolume = cubeBase * cubeSize;
		solutionsCount = 0;
		cube = new int[cubeSize][cubeSize][cubeSize];
	}
	
	public void printCubeBase() {
		for (int row = 0; row < cubeSize; row++) {
			for (int column = 0; column < cubeSize; column++) {
				String on = new String();
				for (int layer = 0; layer < cubeSize; layer++) {
					if (cube[row][column][layer] > 0) {
						on += (layer + 1);
					}
				}
				System.out.printf("%1$" + cubeSize + "s", on);
			}
			System.out.println();
		}
		System.out.println();
	}

	public boolean turnOn(int row, int column, int layer,
			boolean constant) {
		int id;
		if (constant) {
			id = cubeVolume + 1;
		} else {
			id = row * cubeBase + column * cubeSize + layer + 1;
		}

		if (cube[row][column][layer] == 0) {
			int r = (row / p) * p;
			int c = (column / p) * p;
			for (int x = 0; x < cubeSize; x++) {
				if (cube[x][column][layer] == 0) {
					cube[x][column][layer] = (x == row ? id : -id);
				}
				if (cube[row][x][layer] == 0) {
					cube[row][x][layer] = (x == column ? id : -id);
				}
				if (cube[row][column][x] == 0) {
					cube[row][column][x] = (x == layer ? id : -id);
				}
				if (cube[r + x / p][c + x % p][layer] == 0) {
					cube[r + x / p][c + x % p][layer] = ((r + x / p == row)
							&& (c + x % p == column) ? id : -id);
				}
			}
			return true;
		} else {
			return false;
		}
	}

	public boolean turnOff(int row, int column, int layer,
			boolean constant) {
		int id;
		if (constant) {
			id = cubeVolume + 1;
		} else {
			id = row * cubeBase + column * cubeSize + layer + 1;
		}

		if (cube[row][column][layer] > 0) {
			int r = (row / p) * p;
			int c = (column / p) * p;
			for (int x = 0; x < cubeSize; x++) {
				if (cube[x][column][layer] == -id
						|| cube[x][column][layer] == id) {
					cube[x][column][layer] = 0;
				}
				if (cube[row][x][layer] == -id || cube[row][x][layer] == id) {
					cube[row][x][layer] = 0;
				}
				if (cube[row][column][x] == -id || cube[row][column][x] == id) {
					cube[row][column][x] = 0;
				}
				if (cube[r + x / p][c + x % p][layer] == -id
						|| cube[r + x / p][c + x % p][layer] == id) {
					cube[r + x / p][c + x % p][layer] = 0;
				}
			}
			return true;
		} else {
			return false;
		}
	}

	public boolean setConstants(int[][] constants) {
		int row, column, layer;
		for (int i = 0; i < constants.length; i++) {
			row = constants[i][0];
			column = constants[i][1];
			layer = constants[i][2];
			if (!turnOn(row, column, layer, true)) {
				return false;
			}
		}
		return true;
	}

	public int printSolutionsCount(int row, int column, boolean printCube) {
		int count = 0;
		row += column / cubeSize;
		column %= cubeSize;
		if (row < cubeSize) {
			for (int layer = 0; layer < cubeSize; layer++) {
				if (cube[row][column][layer] == cubeVolume + 1) {
					count += printSolutionsCount(row, column + 1, printCube);
				} else if (turnOn(row, column, layer, false)) {
					count += printSolutionsCount(row, column + 1, printCube);
					turnOff(row, column, layer, false);
				}
			}
		} else {
			count = 1;
			if (printCube) {
				System.out.println(++solutionsCount);
				printCubeBase();
			}
		}
		return count;
	}

	public static void main(String[] args) {
		System.out.println("Hello, Sudoku! I am Sudocs.");
		System.out.println();

		Sudocs g = new Sudocs(2);
		long then = System.currentTimeMillis();
		System.out.printf("Total count: %1$s (P = %2$d)", 
				g.printSolutionsCount(0, 0, true), g.p);
		System.out.println();
		long now = System.currentTimeMillis();
		System.out.printf("Time elapsed: %1$d milliseconds.", now - then);
		System.out.println();
		System.out.println();
		
		g = new Sudocs(2);
		if (g.setConstants(new int[][] { { 1, 1, 2 }, { 2, 2, 2 },
				{ 0, 3, 2 }, { 3, 0, 2 } })) {
			g.printCubeBase();
			System.out.println();
			then = System.currentTimeMillis();
			System.out.printf("Total count: %1$s (P = %2$d)",
					g.printSolutionsCount(0, 0, true), g.p);
			System.out.println();
			now = System.currentTimeMillis();
			System.out.printf("Time elapsed: %1$d milliseconds.", now - then);
			System.out.println();
		} else {
			System.out.println("Invalid input!");
		}

		g = new Sudocs(3);
		if (g.setConstants(new int[][] {
				{ 0, 0, 5 },
				{ 0, 1, 1 },
				{ 0, 8, 8 },
				{ 1, 0, 2 },
				{ 1, 2, 0 },
				{ 1, 3, 8 },
				{ 1, 5, 5 },
				{ 1, 7, 6 },
				{ 1, 8, 1 },
				{ 2, 3, 4 },
				{ 2, 4, 1 },
				{ 3, 0, 6 },
				{ 3, 1, 4 },
				{ 4, 0, 0 },
				{ 4, 1, 8 },
				{ 4, 3, 2 },
				{ 4, 4, 5 },
				{ 4, 5, 7 },
				{ 4, 7, 4 },
				{ 4, 8, 6 },
				{ 5, 7, 0 },
				{ 5, 8, 3 },
				{ 6, 4, 0 },
				{ 6, 5, 3 },
				{ 7, 0, 3 },
				{ 7, 1, 0 },
				{ 7, 3, 1 },
				{ 7, 5, 6 },
				{ 7, 6, 8 },
				{ 7, 8, 2 },
				{ 8, 0, 7 },
				{ 8, 7, 3 },
				{ 8, 8, 4 } })) {
			g.printCubeBase();

			System.out.println();
			then = System.currentTimeMillis();
			System.out.printf("Total count: %1$s (P = %2$d)",
					g.printSolutionsCount(0, 0, true), g.p);
			System.out.println();
			now = System.currentTimeMillis();
			System.out.printf("Time elapsed: %1$d milliseconds.", now - then);
			System.out.println();
			
		} else {
			System.out.println("Invalid input!");
		}
		
		System.out.println("Bye, Sudocs!");
	}
}

/*
Hello, Sudoku! I am Sudocs.

1
1   2   3   4
3   4   1   2
2   1   4   3
4   3   2   1

2
1   2   3   4
3   4   1   2
2   3   4   1
4   1   2   3

3
1   2   3   4
3   4   1   2
4   1   2   3
2   3   4   1

4
1   2   3   4
3   4   1   2
4   3   2   1
2   1   4   3

5
1   2   3   4
3   4   2   1
2   1   4   3
4   3   1   2

6
1   2   3   4
3   4   2   1
4   3   1   2
2   1   4   3

7
1   2   3   4
4   3   1   2
2   1   4   3
3   4   2   1

8
1   2   3   4
4   3   1   2
3   4   2   1
2   1   4   3

9
1   2   3   4
4   3   2   1
2   1   4   3
3   4   1   2

10
1   2   3   4
4   3   2   1
2   4   1   3
3   1   4   2

11
1   2   3   4
4   3   2   1
3   1   4   2
2   4   1   3

12
1   2   3   4
4   3   2   1
3   4   1   2
2   1   4   3

13
1   2   4   3
3   4   1   2
2   1   3   4
4   3   2   1

14
1   2   4   3
3   4   1   2
4   3   2   1
2   1   3   4

15
1   2   4   3
3   4   2   1
2   1   3   4
4   3   1   2

16
1   2   4   3
3   4   2   1
2   3   1   4
4   1   3   2

17
1   2   4   3
3   4   2   1
4   1   3   2
2   3   1   4

18
1   2   4   3
3   4   2   1
4   3   1   2
2   1   3   4

19
1   2   4   3
4   3   1   2
2   1   3   4
3   4   2   1

20
1   2   4   3
4   3   1   2
2   4   3   1
3   1   2   4

21
1   2   4   3
4   3   1   2
3   1   2   4
2   4   3   1

22
1   2   4   3
4   3   1   2
3   4   2   1
2   1   3   4

23
1   2   4   3
4   3   2   1
2   1   3   4
3   4   1   2

24
1   2   4   3
4   3   2   1
3   4   1   2
2   1   3   4

25
1   3   2   4
2   4   1   3
3   1   4   2
4   2   3   1

26
1   3   2   4
2   4   1   3
3   2   4   1
4   1   3   2

27
1   3   2   4
2   4   1   3
4   1   3   2
3   2   4   1

28
1   3   2   4
2   4   1   3
4   2   3   1
3   1   4   2

29
1   3   2   4
2   4   3   1
3   1   4   2
4   2   1   3

30
1   3   2   4
2   4   3   1
4   2   1   3
3   1   4   2

31
1   3   2   4
4   2   1   3
2   4   3   1
3   1   4   2

32
1   3   2   4
4   2   1   3
3   1   4   2
2   4   3   1

33
1   3   2   4
4   2   3   1
2   1   4   3
3   4   1   2

34
1   3   2   4
4   2   3   1
2   4   1   3
3   1   4   2

35
1   3   2   4
4   2   3   1
3   1   4   2
2   4   1   3

36
1   3   2   4
4   2   3   1
3   4   1   2
2   1   4   3

37
1   3   4   2
2   4   1   3
3   1   2   4
4   2   3   1

38
1   3   4   2
2   4   1   3
4   2   3   1
3   1   2   4

39
1   3   4   2
2   4   3   1
3   1   2   4
4   2   1   3

40
1   3   4   2
2   4   3   1
3   2   1   4
4   1   2   3

41
1   3   4   2
2   4   3   1
4   1   2   3
3   2   1   4

42
1   3   4   2
2   4   3   1
4   2   1   3
3   1   2   4

43
1   3   4   2
4   2   1   3
2   1   3   4
3   4   2   1

44
1   3   4   2
4   2   1   3
2   4   3   1
3   1   2   4

45
1   3   4   2
4   2   1   3
3   1   2   4
2   4   3   1

46
1   3   4   2
4   2   1   3
3   4   2   1
2   1   3   4

47
1   3   4   2
4   2   3   1
2   4   1   3
3   1   2   4

48
1   3   4   2
4   2   3   1
3   1   2   4
2   4   1   3

49
1   4   2   3
2   3   1   4
3   1   4   2
4   2   3   1

50
1   4   2   3
2   3   1   4
3   2   4   1
4   1   3   2

51
1   4   2   3
2   3   1   4
4   1   3   2
3   2   4   1

52
1   4   2   3
2   3   1   4
4   2   3   1
3   1   4   2

53
1   4   2   3
2   3   4   1
3   2   1   4
4   1   3   2

54
1   4   2   3
2   3   4   1
4   1   3   2
3   2   1   4

55
1   4   2   3
3   2   1   4
2   3   4   1
4   1   3   2

56
1   4   2   3
3   2   1   4
4   1   3   2
2   3   4   1

57
1   4   2   3
3   2   4   1
2   1   3   4
4   3   1   2

58
1   4   2   3
3   2   4   1
2   3   1   4
4   1   3   2

59
1   4   2   3
3   2   4   1
4   1   3   2
2   3   1   4

60
1   4   2   3
3   2   4   1
4   3   1   2
2   1   3   4

61
1   4   3   2
2   3   1   4
3   2   4   1
4   1   2   3

62
1   4   3   2
2   3   1   4
4   1   2   3
3   2   4   1

63
1   4   3   2
2   3   4   1
3   1   2   4
4   2   1   3

64
1   4   3   2
2   3   4   1
3   2   1   4
4   1   2   3

65
1   4   3   2
2   3   4   1
4   1   2   3
3   2   1   4

66
1   4   3   2
2   3   4   1
4   2   1   3
3   1   2   4

67
1   4   3   2
3   2   1   4
2   1   4   3
4   3   2   1

68
1   4   3   2
3   2   1   4
2   3   4   1
4   1   2   3

69
1   4   3   2
3   2   1   4
4   1   2   3
2   3   4   1

70
1   4   3   2
3   2   1   4
4   3   2   1
2   1   4   3

71
1   4   3   2
3   2   4   1
2   3   1   4
4   1   2   3

72
1   4   3   2
3   2   4   1
4   1   2   3
2   3   1   4

73
2   1   3   4
3   4   1   2
1   2   4   3
4   3   2   1

74
2   1   3   4
3   4   1   2
4   3   2   1
1   2   4   3

75
2   1   3   4
3   4   2   1
1   2   4   3
4   3   1   2

76
2   1   3   4
3   4   2   1
1   3   4   2
4   2   1   3

77
2   1   3   4
3   4   2   1
4   2   1   3
1   3   4   2

78
2   1   3   4
3   4   2   1
4   3   1   2
1   2   4   3

79
2   1   3   4
4   3   1   2
1   2   4   3
3   4   2   1

80
2   1   3   4
4   3   1   2
1   4   2   3
3   2   4   1

81
2   1   3   4
4   3   1   2
3   2   4   1
1   4   2   3

82
2   1   3   4
4   3   1   2
3   4   2   1
1   2   4   3

83
2   1   3   4
4   3   2   1
1   2   4   3
3   4   1   2

84
2   1   3   4
4   3   2   1
3   4   1   2
1   2   4   3

85
2   1   4   3
3   4   1   2
1   2   3   4
4   3   2   1

86
2   1   4   3
3   4   1   2
1   3   2   4
4   2   3   1

87
2   1   4   3
3   4   1   2
4   2   3   1
1   3   2   4

88
2   1   4   3
3   4   1   2
4   3   2   1
1   2   3   4

89
2   1   4   3
3   4   2   1
1   2   3   4
4   3   1   2

90
2   1   4   3
3   4   2   1
4   3   1   2
1   2   3   4

91
2   1   4   3
4   3   1   2
1   2   3   4
3   4   2   1

92
2   1   4   3
4   3   1   2
3   4   2   1
1   2   3   4

93
2   1   4   3
4   3   2   1
1   2   3   4
3   4   1   2

94
2   1   4   3
4   3   2   1
1   4   3   2
3   2   1   4

95
2   1   4   3
4   3   2   1
3   2   1   4
1   4   3   2

96
2   1   4   3
4   3   2   1
3   4   1   2
1   2   3   4

97
2   3   1   4
1   4   2   3
3   1   4   2
4   2   3   1

98
2   3   1   4
1   4   2   3
3   2   4   1
4   1   3   2

99
2   3   1   4
1   4   2   3
4   1   3   2
3   2   4   1

100
2   3   1   4
1   4   2   3
4   2   3   1
3   1   4   2

101
2   3   1   4
1   4   3   2
3   2   4   1
4   1   2   3

102
2   3   1   4
1   4   3   2
4   1   2   3
3   2   4   1

103
2   3   1   4
4   1   2   3
1   4   3   2
3   2   4   1

104
2   3   1   4
4   1   2   3
3   2   4   1
1   4   3   2

105
2   3   1   4
4   1   3   2
1   2   4   3
3   4   2   1

106
2   3   1   4
4   1   3   2
1   4   2   3
3   2   4   1

107
2   3   1   4
4   1   3   2
3   2   4   1
1   4   2   3

108
2   3   1   4
4   1   3   2
3   4   2   1
1   2   4   3

109
2   3   4   1
1   4   2   3
3   2   1   4
4   1   3   2

110
2   3   4   1
1   4   2   3
4   1   3   2
3   2   1   4

111
2   3   4   1
1   4   3   2
3   1   2   4
4   2   1   3

112
2   3   4   1
1   4   3   2
3   2   1   4
4   1   2   3

113
2   3   4   1
1   4   3   2
4   1   2   3
3   2   1   4

114
2   3   4   1
1   4   3   2
4   2   1   3
3   1   2   4

115
2   3   4   1
4   1   2   3
1   2   3   4
3   4   1   2

116
2   3   4   1
4   1   2   3
1   4   3   2
3   2   1   4

117
2   3   4   1
4   1   2   3
3   2   1   4
1   4   3   2

118
2   3   4   1
4   1   2   3
3   4   1   2
1   2   3   4

119
2   3   4   1
4   1   3   2
1   4   2   3
3   2   1   4

120
2   3   4   1
4   1   3   2
3   2   1   4
1   4   2   3

121
2   4   1   3
1   3   2   4
3   1   4   2
4   2   3   1

122
2   4   1   3
1   3   2   4
3   2   4   1
4   1   3   2

123
2   4   1   3
1   3   2   4
4   1   3   2
3   2   4   1

124
2   4   1   3
1   3   2   4
4   2   3   1
3   1   4   2

125
2   4   1   3
1   3   4   2
3   1   2   4
4   2   3   1

126
2   4   1   3
1   3   4   2
4   2   3   1
3   1   2   4

127
2   4   1   3
3   1   2   4
1   3   4   2
4   2   3   1

128
2   4   1   3
3   1   2   4
4   2   3   1
1   3   4   2

129
2   4   1   3
3   1   4   2
1   2   3   4
4   3   2   1

130
2   4   1   3
3   1   4   2
1   3   2   4
4   2   3   1

131
2   4   1   3
3   1   4   2
4   2   3   1
1   3   2   4

132
2   4   1   3
3   1   4   2
4   3   2   1
1   2   3   4

133
2   4   3   1
1   3   2   4
3   1   4   2
4   2   1   3

134
2   4   3   1
1   3   2   4
4   2   1   3
3   1   4   2

135
2   4   3   1
1   3   4   2
3   1   2   4
4   2   1   3

136
2   4   3   1
1   3   4   2
3   2   1   4
4   1   2   3

137
2   4   3   1
1   3   4   2
4   1   2   3
3   2   1   4

138
2   4   3   1
1   3   4   2
4   2   1   3
3   1   2   4

139
2   4   3   1
3   1   2   4
1   2   4   3
4   3   1   2

140
2   4   3   1
3   1   2   4
1   3   4   2
4   2   1   3

141
2   4   3   1
3   1   2   4
4   2   1   3
1   3   4   2

142
2   4   3   1
3   1   2   4
4   3   1   2
1   2   4   3

143
2   4   3   1
3   1   4   2
1   3   2   4
4   2   1   3

144
2   4   3   1
3   1   4   2
4   2   1   3
1   3   2   4

145
3   1   2   4
2   4   1   3
1   3   4   2
4   2   3   1

146
3   1   2   4
2   4   1   3
4   2   3   1
1   3   4   2

147
3   1   2   4
2   4   3   1
1   2   4   3
4   3   1   2

148
3   1   2   4
2   4   3   1
1   3   4   2
4   2   1   3

149
3   1   2   4
2   4   3   1
4   2   1   3
1   3   4   2

150
3   1   2   4
2   4   3   1
4   3   1   2
1   2   4   3

151
3   1   2   4
4   2   1   3
1   3   4   2
2   4   3   1

152
3   1   2   4
4   2   1   3
1   4   3   2
2   3   4   1

153
3   1   2   4
4   2   1   3
2   3   4   1
1   4   3   2

154
3   1   2   4
4   2   1   3
2   4   3   1
1   3   4   2

155
3   1   2   4
4   2   3   1
1   3   4   2
2   4   1   3

156
3   1   2   4
4   2   3   1
2   4   1   3
1   3   4   2

157
3   1   4   2
2   4   1   3
1   2   3   4
4   3   2   1

158
3   1   4   2
2   4   1   3
1   3   2   4
4   2   3   1

159
3   1   4   2
2   4   1   3
4   2   3   1
1   3   2   4

160
3   1   4   2
2   4   1   3
4   3   2   1
1   2   3   4

161
3   1   4   2
2   4   3   1
1   3   2   4
4   2   1   3

162
3   1   4   2
2   4   3   1
4   2   1   3
1   3   2   4

163
3   1   4   2
4   2   1   3
1   3   2   4
2   4   3   1

164
3   1   4   2
4   2   1   3
2   4   3   1
1   3   2   4

165
3   1   4   2
4   2   3   1
1   3   2   4
2   4   1   3

166
3   1   4   2
4   2   3   1
1   4   2   3
2   3   1   4

167
3   1   4   2
4   2   3   1
2   3   1   4
1   4   2   3

168
3   1   4   2
4   2   3   1
2   4   1   3
1   3   2   4

169
3   2   1   4
1   4   2   3
2   3   4   1
4   1   3   2

170
3   2   1   4
1   4   2   3
4   1   3   2
2   3   4   1

171
3   2   1   4
1   4   3   2
2   1   4   3
4   3   2   1

172
3   2   1   4
1   4   3   2
2   3   4   1
4   1   2   3

173
3   2   1   4
1   4   3   2
4   1   2   3
2   3   4   1

174
3   2   1   4
1   4   3   2
4   3   2   1
2   1   4   3

175
3   2   1   4
4   1   2   3
1   3   4   2
2   4   3   1

176
3   2   1   4
4   1   2   3
1   4   3   2
2   3   4   1

177
3   2   1   4
4   1   2   3
2   3   4   1
1   4   3   2

178
3   2   1   4
4   1   2   3
2   4   3   1
1   3   4   2

179
3   2   1   4
4   1   3   2
1   4   2   3
2   3   4   1

180
3   2   1   4
4   1   3   2
2   3   4   1
1   4   2   3

181
3   2   4   1
1   4   2   3
2   1   3   4
4   3   1   2

182
3   2   4   1
1   4   2   3
2   3   1   4
4   1   3   2

183
3   2   4   1
1   4   2   3
4   1   3   2
2   3   1   4

184
3   2   4   1
1   4   2   3
4   3   1   2
2   1   3   4

185
3   2   4   1
1   4   3   2
2   3   1   4
4   1   2   3

186
3   2   4   1
1   4   3   2
4   1   2   3
2   3   1   4

187
3   2   4   1
4   1   2   3
1   4   3   2
2   3   1   4

188
3   2   4   1
4   1   2   3
2   3   1   4
1   4   3   2

189
3   2   4   1
4   1   3   2
1   3   2   4
2   4   1   3

190
3   2   4   1
4   1   3   2
1   4   2   3
2   3   1   4

191
3   2   4   1
4   1   3   2
2   3   1   4
1   4   2   3

192
3   2   4   1
4   1   3   2
2   4   1   3
1   3   2   4

193
3   4   1   2
1   2   3   4
2   1   4   3
4   3   2   1

194
3   4   1   2
1   2   3   4
2   3   4   1
4   1   2   3

195
3   4   1   2
1   2   3   4
4   1   2   3
2   3   4   1

196
3   4   1   2
1   2   3   4
4   3   2   1
2   1   4   3

197
3   4   1   2
1   2   4   3
2   1   3   4
4   3   2   1

198
3   4   1   2
1   2   4   3
4   3   2   1
2   1   3   4

199
3   4   1   2
2   1   3   4
1   2   4   3
4   3   2   1

200
3   4   1   2
2   1   3   4
4   3   2   1
1   2   4   3

201
3   4   1   2
2   1   4   3
1   2   3   4
4   3   2   1

202
3   4   1   2
2   1   4   3
1   3   2   4
4   2   3   1

203
3   4   1   2
2   1   4   3
4   2   3   1
1   3   2   4

204
3   4   1   2
2   1   4   3
4   3   2   1
1   2   3   4

205
3   4   2   1
1   2   3   4
2   1   4   3
4   3   1   2

206
3   4   2   1
1   2   3   4
4   3   1   2
2   1   4   3

207
3   4   2   1
1   2   4   3
2   1   3   4
4   3   1   2

208
3   4   2   1
1   2   4   3
2   3   1   4
4   1   3   2

209
3   4   2   1
1   2   4   3
4   1   3   2
2   3   1   4

210
3   4   2   1
1   2   4   3
4   3   1   2
2   1   3   4

211
3   4   2   1
2   1   3   4
1   2   4   3
4   3   1   2

212
3   4   2   1
2   1   3   4
1   3   4   2
4   2   1   3

213
3   4   2   1
2   1   3   4
4   2   1   3
1   3   4   2

214
3   4   2   1
2   1   3   4
4   3   1   2
1   2   4   3

215
3   4   2   1
2   1   4   3
1   2   3   4
4   3   1   2

216
3   4   2   1
2   1   4   3
4   3   1   2
1   2   3   4

217
4   1   2   3
2   3   1   4
1   4   3   2
3   2   4   1

218
4   1   2   3
2   3   1   4
3   2   4   1
1   4   3   2

219
4   1   2   3
2   3   4   1
1   2   3   4
3   4   1   2

220
4   1   2   3
2   3   4   1
1   4   3   2
3   2   1   4

221
4   1   2   3
2   3   4   1
3   2   1   4
1   4   3   2

222
4   1   2   3
2   3   4   1
3   4   1   2
1   2   3   4

223
4   1   2   3
3   2   1   4
1   3   4   2
2   4   3   1

224
4   1   2   3
3   2   1   4
1   4   3   2
2   3   4   1

225
4   1   2   3
3   2   1   4
2   3   4   1
1   4   3   2

226
4   1   2   3
3   2   1   4
2   4   3   1
1   3   4   2

227
4   1   2   3
3   2   4   1
1   4   3   2
2   3   1   4

228
4   1   2   3
3   2   4   1
2   3   1   4
1   4   3   2

229
4   1   3   2
2   3   1   4
1   2   4   3
3   4   2   1

230
4   1   3   2
2   3   1   4
1   4   2   3
3   2   4   1

231
4   1   3   2
2   3   1   4
3   2   4   1
1   4   2   3

232
4   1   3   2
2   3   1   4
3   4   2   1
1   2   4   3

233
4   1   3   2
2   3   4   1
1   4   2   3
3   2   1   4

234
4   1   3   2
2   3   4   1
3   2   1   4
1   4   2   3

235
4   1   3   2
3   2   1   4
1   4   2   3
2   3   4   1

236
4   1   3   2
3   2   1   4
2   3   4   1
1   4   2   3

237
4   1   3   2
3   2   4   1
1   3   2   4
2   4   1   3

238
4   1   3   2
3   2   4   1
1   4   2   3
2   3   1   4

239
4   1   3   2
3   2   4   1
2   3   1   4
1   4   2   3

240
4   1   3   2
3   2   4   1
2   4   1   3
1   3   2   4

241
4   2   1   3
1   3   2   4
2   4   3   1
3   1   4   2

242
4   2   1   3
1   3   2   4
3   1   4   2
2   4   3   1

243
4   2   1   3
1   3   4   2
2   1   3   4
3   4   2   1

244
4   2   1   3
1   3   4   2
2   4   3   1
3   1   2   4

245
4   2   1   3
1   3   4   2
3   1   2   4
2   4   3   1

246
4   2   1   3
1   3   4   2
3   4   2   1
2   1   3   4

247
4   2   1   3
3   1   2   4
1   3   4   2
2   4   3   1

248
4   2   1   3
3   1   2   4
1   4   3   2
2   3   4   1

249
4   2   1   3
3   1   2   4
2   3   4   1
1   4   3   2

250
4   2   1   3
3   1   2   4
2   4   3   1
1   3   4   2

251
4   2   1   3
3   1   4   2
1   3   2   4
2   4   3   1

252
4   2   1   3
3   1   4   2
2   4   3   1
1   3   2   4

253
4   2   3   1
1   3   2   4
2   1   4   3
3   4   1   2

254
4   2   3   1
1   3   2   4
2   4   1   3
3   1   4   2

255
4   2   3   1
1   3   2   4
3   1   4   2
2   4   1   3

256
4   2   3   1
1   3   2   4
3   4   1   2
2   1   4   3

257
4   2   3   1
1   3   4   2
2   4   1   3
3   1   2   4

258
4   2   3   1
1   3   4   2
3   1   2   4
2   4   1   3

259
4   2   3   1
3   1   2   4
1   3   4   2
2   4   1   3

260
4   2   3   1
3   1   2   4
2   4   1   3
1   3   4   2

261
4   2   3   1
3   1   4   2
1   3   2   4
2   4   1   3

262
4   2   3   1
3   1   4   2
1   4   2   3
2   3   1   4

263
4   2   3   1
3   1   4   2
2   3   1   4
1   4   2   3

264
4   2   3   1
3   1   4   2
2   4   1   3
1   3   2   4

265
4   3   1   2
1   2   3   4
2   1   4   3
3   4   2   1

266
4   3   1   2
1   2   3   4
3   4   2   1
2   1   4   3

267
4   3   1   2
1   2   4   3
2   1   3   4
3   4   2   1

268
4   3   1   2
1   2   4   3
2   4   3   1
3   1   2   4

269
4   3   1   2
1   2   4   3
3   1   2   4
2   4   3   1

270
4   3   1   2
1   2   4   3
3   4   2   1
2   1   3   4

271
4   3   1   2
2   1   3   4
1   2   4   3
3   4   2   1

272
4   3   1   2
2   1   3   4
1   4   2   3
3   2   4   1

273
4   3   1   2
2   1   3   4
3   2   4   1
1   4   2   3

274
4   3   1   2
2   1   3   4
3   4   2   1
1   2   4   3

275
4   3   1   2
2   1   4   3
1   2   3   4
3   4   2   1

276
4   3   1   2
2   1   4   3
3   4   2   1
1   2   3   4

277
4   3   2   1
1   2   3   4
2   1   4   3
3   4   1   2

278
4   3   2   1
1   2   3   4
2   4   1   3
3   1   4   2

279
4   3   2   1
1   2   3   4
3   1   4   2
2   4   1   3

280
4   3   2   1
1   2   3   4
3   4   1   2
2   1   4   3

281
4   3   2   1
1   2   4   3
2   1   3   4
3   4   1   2

282
4   3   2   1
1   2   4   3
3   4   1   2
2   1   3   4

283
4   3   2   1
2   1   3   4
1   2   4   3
3   4   1   2

284
4   3   2   1
2   1   3   4
3   4   1   2
1   2   4   3

285
4   3   2   1
2   1   4   3
1   2   3   4
3   4   1   2

286
4   3   2   1
2   1   4   3
1   4   3   2
3   2   1   4

287
4   3   2   1
2   1   4   3
3   2   1   4
1   4   3   2

288
4   3   2   1
2   1   4   3
3   4   1   2
1   2   3   4

Total count: 288 (P = 2)
Time elapsed: 249 milliseconds.

       3
3        
   3    
3            


1
1   2   4   3
4   3   1   2
2   1   3   4
3   4   2   1

2
1   2   4   3
4   3   1   2
2   4   3   1
3   1   2   4

3
1   2   4   3
4   3   2   1
2   1   3   4
3   4   1   2

4
1   4   2   3
2   3   1   4
4   1   3   2
3   2   4   1

5
1   4   2   3
2   3   1   4
4   2   3   1
3   1   4   2

6
1   4   2   3
2   3   4   1
4   1   3   2
3   2   1   4

7
2   1   4   3
4   3   1   2
1   2   3   4
3   4   2   1

8
2   1   4   3
4   3   2   1
1   2   3   4
3   4   1   2

9
2   1   4   3
4   3   2   1
1   4   3   2
3   2   1   4

10
2   4   1   3
1   3   2   4
4   1   3   2
3   2   4   1

11
2   4   1   3
1   3   2   4
4   2   3   1
3   1   4   2

12
2   4   1   3
1   3   4   2
4   2   3   1
3   1   2   4

13
4   1   2   3
2   3   1   4
1   4   3   2
3   2   4   1

14
4   1   2   3
2   3   4   1
1   2   3   4
3   4   1   2

15
4   1   2   3
2   3   4   1
1   4   3   2
3   2   1   4

16
4   2   1   3
1   3   2   4
2   4   3   1
3   1   4   2

17
4   2   1   3
1   3   4   2
2   1   3   4
3   4   2   1

18
4   2   1   3
1   3   4   2
2   4   3   1
3   1   2   4

Total count: 18 (P = 2)
Time elapsed: 16 milliseconds.
6        2                                                              9
3                 1        9                 6                 7        2
                           5        2                                    
7        5                                                               
1        9                 3        6        8                 5        7
                                                               1        4
                                    1        4                           
4        1                 2                 7        9                 3
8                                                              4        5


1
6        2        5        4        7        1        8        3        9
3        4        1        9        8        6        5        7        2
9        8        7        5        2        3        4        6        1
7        5        3        1        4        2        6        9        8
1        9        4        3        6        8        2        5        7
2        6        8        7        9        5        3        1        4
5        3        9        8        1        4        7        2        6
4        1        6        2        5        7        9        8        3
8        7        2        6        3        9        1        4        5

Total count: 1 (P = 3)
Time elapsed: 15 milliseconds.
Bye, Sudocs!
*/
